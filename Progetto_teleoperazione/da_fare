abbiamo iniziato a lavorare sulla teleoperazione utilizzando al posto del radio comando un servo tester il quale genera un segnale pwm con un duty cicle regolabile sia manualmente che automaticamnte. A questo punto abbiamo demodulato il segnale in frequenza tramite un 

durante la connessione di più canali abbiamo riscontrato un problema nella trasmissione seriale del buffer, all'inizio abbiamo pensato che il problema fosse dovuto a priorità dverse delle interruzioni dei timer per cui abbiamo cercato di modificarle in modo manuale nel codice tramite il seguente codice: 
void NVIC_Config(void)
{
    // Configura la priorità dell'interruzione per TIM1 e TIM2
    HAL_NVIC_SetPriority(TIM1_CC_IRQn, 1, 0);  // Priorità alta per TIM1
    HAL_NVIC_SetPriority(TIM2_CC_IRQn, 2, 0);  // Priorità inferiore per TIM2

    // Abilita le interruzioni TIM1 e TIM2
    HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
    HAL_NVIC_EnableIRQ(TIM2_CC_IRQn);
}

void TIM1_CC_IRQHandler(void)
{
    HAL_TIM_IRQHandler(&htim1);
}

void TIM2_CC_IRQHandler(void)
{
    HAL_TIM_IRQHandler(&htim2);
}
come normale che sia il codice non ha risolto il problema in quanto tutte le interruzioni generate dai timer vengono gestite una dopo l'altra prima che arrivi l'interruzione successiva. Per risolvere invece il problema in modo definitivo abbiamo aumentato la velocità di trasmissione dei bit del seriale a 2Mbit/sec in questo modo la trasmissione del messaggio finisce prima dell'interruzione successiva. 
Ci siamo accorti che scollegando il segnale pwm dal stm il timer realtivo all'ingresso continua a generare interruzioni questo però soltanto in alcuni casi questo è quindi riconducibile a possibili interferenze.
Comunque in generale qunado il ricevitore non invia più il segnale pwm, cioè il riceeviore non riceve dati dal radiocomando, dobbiamo inviare al motore e ai servo il segnale di stop. Utilizziamo quindi l'interruzzione di fine periodo del timer e quando viene catturata la stm invia al raspberry il segnale di stop per i motori
A questo punto rimangono da gestire le priorità di comunicazione cioè il grilletto di regolazione della velocità del primo telecomando deve avere la precendenza sul secondo 

ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=IT

network={
    ssid="NomeReteWiFi"
    psk="PasswordWiFi"
    key_mgmt=WPA-PSK
}

netsh interface portproxy add v4tov4 listenport=8081 listenaddress=127.0.0.1 connectport=8080 connectaddress=<IP_di_WSL2>
